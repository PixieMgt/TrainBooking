@using Microsoft.AspNetCore.Mvc.Localization;
@model TrainBooking.ViewModels.BookingVM

@{
    ViewData["Title"] = "Index";
}

@inject IViewLocalizer Localizer


<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="departureStation" class="control-label"></label>
                <select asp-for="departureStation" class="form-control" asp-items="Model.StationList">
                    <option></option>
                </select>
                <span asp-validation-for="departureStation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="arrivalStation" class="control-label"></label>
                <select asp-for="arrivalStation" class="form-control" asp-items="Model.StationList">
                    <option></option>
                </select>
                <span asp-validation-for="arrivalStation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="departureDate" class="control-label">Departure</label>
                <input type="date" class="form-control" />
                <span asp-validation-for="departureDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="time" class="form-control" />
                <span asp-validation-for="departureTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Localizer["Plan my journey"]" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@if (@Model.Paths != null)
{
    <div class="row">
        <table class="table">
            <tr>
                <th>From</th>
                <th>To</th>
                <th>Departure</th>
                <th>Arrival</th>
                <th></th>
            </tr>
            @if (Model.Paths.Count() == 0)
            {
                <tr>
                    <td>No trains found</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>    
            }
            @foreach (var item in Model.Paths)
            {
                @if (item.SectionsVM.First().DepartureTime > Model.departureTime)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.SectionsVM.First().DepartureStation)</td>
                        <td>@Html.DisplayFor(modelItem => item.SectionsVM.Last().DestinationStation)</td>
                        <td>@Model.departureDate @Html.DisplayFor(modelItem => item.SectionsVM.First().DepartureTime)</td>
                        <td>@Model.departureDate @Html.DisplayFor(modelItem => item.SectionsVM.Last().ArrivalTime)</td>
                        <td>
                            <a asp-action="Path" asp-route-id="@item.Id" asp-route-id="">Buy ticket</a>
                        </td>

                    </tr>
                }
            }
        </table>
    </div>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
