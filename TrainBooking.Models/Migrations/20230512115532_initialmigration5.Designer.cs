// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainBooking.Models.Context;

#nullable disable

namespace TrainBooking.Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230512115532_initialmigration5")]
    partial class initialmigration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrainBooking.Models.Context.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DepartureStationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestinationStationId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DestinationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartureStationId");

                    b.HasIndex("DestinationStationId");

                    b.HasIndex("TrainId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.SectionTicket", b =>
                {
                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("SectionId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("SectionTickets");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessClassCapacity")
                        .HasColumnType("int");

                    b.Property<int>("EconomyClassCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Section", b =>
                {
                    b.HasOne("TrainBooking.Models.Context.Station", "DepartureStation")
                        .WithMany("Departures")
                        .HasForeignKey("DepartureStationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrainBooking.Models.Context.Station", "DestinationStation")
                        .WithMany("Destinations")
                        .HasForeignKey("DestinationStationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrainBooking.Models.Context.Train", "Train")
                        .WithMany("Sections")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartureStation");

                    b.Navigation("DestinationStation");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.SectionTicket", b =>
                {
                    b.HasOne("TrainBooking.Models.Context.Section", "Section")
                        .WithMany("SectionTickets")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainBooking.Models.Context.Ticket", "Ticket")
                        .WithMany("SectionTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Ticket", b =>
                {
                    b.HasOne("TrainBooking.Models.Context.Booking", "Booking")
                        .WithMany("Tickets")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Booking", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Section", b =>
                {
                    b.Navigation("SectionTickets");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Station", b =>
                {
                    b.Navigation("Departures");

                    b.Navigation("Destinations");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Ticket", b =>
                {
                    b.Navigation("SectionTickets");
                });

            modelBuilder.Entity("TrainBooking.Models.Context.Train", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
